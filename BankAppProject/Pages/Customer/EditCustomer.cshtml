@page
@model BankAppProject.Pages.Customer.EditCustomerModel
@{
}
<a asp-page="/Customer/CustomerDetails"
   asp-route-customerId="@Model.CustomerId"
   class="btn btn-primary mb-2">
    <i class="fa-solid fa-arrow-left"></i>
</a>
<div class="card">
    <div class="card-header d-flex flex-wrap justify-content-between mb-2">
        <h2 class="mb-0">Edit Customer</h2>
        <form method="post" asp-page-handler="Delete"
              onsubmit="return confirm('Are you sure you want to Inactivate this customer? All accounts will also be inactivated.')">
            <input type="hidden" name="customerId" value="@Model.Customer.CustomerId" />
            <button type="submit" class="btn btn-outline-danger">
                Inactivate Customer <i class="fa-solid fa-trash-can"></i>
            </button>
        </form>
    </div>
    <div class="card-body">
        <form method="post">
            <div class="row mb-3">
                <div class="col-md-5">
                    <label asp-for="Customer.Givenname">First name</label>
                    <input class="form-control" asp-for="Customer.Givenname">
                    <span asp-validation-for="Customer.Givenname" class="text-danger"></span>
                </div>
                <div class="col-md-5">
                    <label asp-for="Customer.Surname">Last name</label>
                    <input class="form-control" asp-for="Customer.Surname">
                    <span asp-validation-for="Customer.Surname" class="text-danger"></span>
                </div>
                <div class="col-md-2">
                    <label asp-for="Customer.Gender">Gender</label>
                    <select class="form-control" asp-for="Customer.Gender" asp-items="@Model.Genders">
                    </select>
                    <span asp-validation-for="Customer.Gender"
                          class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Customer.Streetaddress">Street address</label>
                    <input class="form-control" asp-for="Customer.Streetaddress">
                    <span asp-validation-for="Customer.Streetaddress" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Customer.City">City</label>
                    <input class="form-control" asp-for="Customer.City">
                    <span asp-validation-for="Customer.City" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Customer.Zipcode">Zipcode</label>
                    <input class="form-control" asp-for="Customer.Zipcode">
                    <span asp-validation-for="Customer.Zipcode" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Customer.Country">Country</label>
                    <select class="form-control" asp-for="Customer.Country" asp-items="@Model.Countries">
                    </select>
                    <span asp-validation-for="Customer.Country"
                          class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Customer.Birthday">Birthday</label>
                    <input type="date" class="form-control"
                           asp-for="Customer.Birthday"
                           max="@DateTime.Today.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="Customer.Birthday" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Customer.NationalId">Social security #</label>
                    <input class="form-control" asp-for="Customer.NationalId">
                    <span asp-validation-for="Customer.NationalId" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Customer.Telephonenumber">Phone</label>
                    <div class="input-group">
                        <span class="input-group-text" id="countryCode"></span>
                        <input class="form-control" asp-for="Customer.Telephonenumber">
                    </div>
                    <span asp-validation-for="Customer.Telephonenumber" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Customer.Emailaddress">Email</label>
                    <input class="form-control" asp-for="Customer.Emailaddress">
                    <span asp-validation-for="Customer.Emailaddress" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-12 d-flex justify-content-end">
                    <button type="submit" class="btn btn-outline-primary">Save</button>
                </div>
            </div>
        </form>
        <!-- Errors -->
        @if (!ViewData.ModelState.IsValid)
        {
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
        }
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const countrySelect = document.querySelector('[name="Customer.Country"]');
            const prefixSpan = document.getElementById('countryCode');

            console.log("countrySelect exists?", countrySelect);

            const countryCodes = {
                Sweden: "+46",
                Norway: "+47",
                Denmark: "+45",
                Finland: "+358"
            };


            // Visa initial kod
            const country = countrySelect.value;
            console.log("Country on load:", country);
            const code = countryCodes[country] || '';
            prefixSpan.textContent = code;

            // Ändra när man väljer nytt
            countrySelect.addEventListener('change', () => {
                const newCountry = countrySelect.value;
                const newCode = countryCodes[newCountry] || '';
                prefixSpan.textContent = newCode;
            });
        });
    </script>
}
